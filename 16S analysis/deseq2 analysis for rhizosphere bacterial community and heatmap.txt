##load library
library("DESeq2")
library("pheatmap")
library(viridis)
library(phyloseq)
library(Matrix)
library("data.table")
library(RColorBrewer)
library(ampvis2)

##rhizosphere
physeq_significant <- readRDS("/physeq_significant.rds")

#phyloseq object ITS significant
physeq_significant

##Subset for only rhizoplane 
(DA_16S_rh_sig<-subset_samples(physeq_significant, compartment%in% c("1_rhizosphere"))) ## rhizoplane samples
otu_table(DA_16S_rh_sig) <- otu_table(DA_16S_rh_sig)[which(rowSums(otu_table(DA_16S_rh_sig)) >= 1),] 
metadata_da_sig_rh <- as(sample_data(DA_16S_rh_sig), "data.frame") ##check if the metadata chosen is correct

##subset for healthy pimpi vs stressed money
DA_16S_rh_sig_PM <- subset_samples(DA_16S_rh_sig, G_T_C %in% c( "1_SP_H_RH" ,"6_SL_S_RH")) 

##subset for healthy money vs stressed pimpi
DA_16S_rh_sig_MP <- subset_samples(DA_16S_rh_sig, G_T_C %in% c( "2_SL_H_RH" ,"5_SP_S_RH"))

# create deseq2 object and run the analysis on treatment differences
Rh_SP_deseq_16S_sig <- phyloseq_to_deseq2(subset_samples(DA_16S_rh_sig, genotype=="S Pimpinellifolium" & compartment=="1_rhizosphere"), ~ treatment)
Rh_SP_deseq_16S_sig<- DESeq(Rh_SP_deseq_16S_sig, test="Wald", fitType="parametric")

Rh_SL_deseq_16S_sig <- phyloseq_to_deseq2(subset_samples(DA_16S_rh_sig, genotype=="S Lycopersicum" & compartment=="1_rhizosphere"), ~ treatment)
Rh_SL_deseq_16S_sig <- DESeq(Rh_SL_deseq_16S_sig, test="Wald", fitType="parametric")

# create deseq2 object and run the analysis on genotype differences
Rh_h_deseq_16S_sig <- phyloseq_to_deseq2(subset_samples(DA_16S_rh_sig, treatment=="healthy" & compartment=="1_rhizosphere"), ~ genotype)
Rh_h_deseq_16S_sig<- DESeq(Rh_h_deseq_16S_sig, test="Wald", fitType="parametric")

Rh_s_deseq_16S_sig<- phyloseq_to_deseq2(subset_samples(DA_16S_rh_sig, treatment=="stressed" & compartment=="1_rhizosphere"), ~ genotype)
Rh_s_deseq_16S_sig <- DESeq(Rh_s_deseq_16S_sig, test="Wald", fitType="parametric")

#create deseq2 object run analysis between HP VS SM
Rh_PM_deseq_16S_sig <- phyloseq_to_deseq2(DA_16S_rh_sig_PM, ~ G_T_C)
Rh_PM_deseq_16S_sig<- DESeq(Rh_PM_deseq_16S_sig, test="Wald", fitType="parametric")

#create deseq2 object run analysis between HM vs SP
Rh_MP_deseq_16S_sig <- phyloseq_to_deseq2(DA_16S_rh_sig_MP, ~ G_T_C)
Rh_MP_deseq_16S_sig<- DESeq(Rh_MP_deseq_16S_sig, test="Wald", fitType="parametric")

##set alpha for significance level
alpha = 0.05

# make pairwise comparsions on differential abundance for both species and treatment

##rhizosphere of stressed vs healthy pimpi
res_SP_rh = results(Rh_SP_deseq_16S_sig, contrast=c("treatment", "stressed", "healthy"), cooksCutoff = FALSE)
sigtab_SP_rh = res_SP_rh[which(res_SP_rh$padj < alpha), ]
sigtab_SP_rh = cbind(as(sigtab_SP_rh, "data.frame"), as(phyloseq::tax_table(physeq_significant)[rownames(sigtab_SP_rh), ], "matrix"))
view(sigtab_SP_rh)
write.csv(sigtab_SP_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/ Rh_CBP vs Rh_BP.csv", row.names=TRUE)

##rhizosphere of stressed vs healthy money
res2_SL_rh = results(Rh_SL_deseq_16S_sig, contrast=c("treatment", "stressed", "healthy"), cooksCutoff = FALSE)
sigtab2_SL_rh = res2_SL_rh[which(res2_SL_rh$padj < alpha), ]
sigtab2_SL_rh = cbind(as(sigtab2_SL_rh, "data.frame"), as(phyloseq::tax_table(physeq_significant)[rownames(sigtab2_SL_rh), ], "matrix"))
view(sigtab2_SL_rh)
write.csv(sigtab2_SL_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/ Rh_CBM vs Rh_BM.csv", row.names=TRUE)

##rhizosphere of healthy Pimpi vs healthy money
res3_SPL_rh = results(Rh_h_deseq_16S_sig, contrast=c("genotype", "S Pimpinellifolium", "S Lycopersicum"), cooksCutoff = FALSE)
sigtab3_SPL_rh = res3_SPL_rh[which(res3_SPL_rh$padj < alpha), ]
sigtab3_SPL_rh = cbind(as(sigtab3_SPL_rh, "data.frame"), as(phyloseq::tax_table(physeq_significant)[rownames(sigtab3_SPL_rh), ], "matrix"))
View(sigtab3_SPL_rh)
write.csv(sigtab3_SPL_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/ Rh_CBP vs Rh_CBM.csv", row.names=TRUE)

#rhizosphere of stressed pimpi vs stressed money
res4_SPL_rh = results(Rh_s_deseq_16S_sig, contrast=c("genotype", "S Pimpinellifolium", "S Lycopersicum"), cooksCutoff = FALSE)
sigtab4_SPL_rh = res4_SPL_rh[which(res4_SPL_rh$padj < alpha), ]
sigtab4_SPL_rh = cbind(as(sigtab4_SPL_rh, "data.frame"), as(phyloseq::tax_table(physeq_significant)[rownames(sigtab4_SPL_rh), ], "matrix"))
View(sigtab4_SPL_rh)
write.csv(sigtab4_SPL_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/ Rh_BP vs Rh_BM.csv", row.names=TRUE)

#rhizosphere of healthy pimpi vs stressed money
res5_PM_rh = results(Rh_PM_deseq_16S_sig, contrast=c("G_T_C", "1_SP_H_RH" ,"6_SL_S_RH"), cooksCutoff = FALSE)
sigtab5_PM_rh = res5_PM_rh[which(res5_PM_rh$padj < alpha), ]
sigtab5_PM_rh = cbind(as(sigtab5_PM_rh, "data.frame"), as(phyloseq::tax_table(physeq_significant)[rownames(sigtab5_PM_rh), ], "matrix"))
View(sigtab5_PM_rh)
write.csv(sigtab5_PM_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/ Rh_CBP vs Rh_BM.csv", row.names=TRUE)

#rhizosphere of healthy money vs stressed pimpi
res6_MP_rh = results(Rh_MP_deseq_16S_sig, contrast=c("G_T_C", "2_SL_H_RH" ,"5_SP_S_RH"), cooksCutoff = FALSE)
sigtab6_MP_rh = res6_MP_rh[which(res6_MP_rh$padj < alpha), ]
sigtab6_MP_rh = cbind(as(sigtab6_MP_rh, "data.frame"), as(phyloseq::tax_table(physeq_significant)[rownames(sigtab6_MP_rh), ], "matrix"))
View(sigtab6_MP_rh)
write.csv(sigtab6_MP_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/ Rh_CBM vs Rh_BP.csv", row.names=TRUE)

##extract the ASV names who share the same names and add the unique ones in the list
select_SP_16S_rh <- rownames(sigtab_SP_rh)
select_SL_16S_rh <- rownames(sigtab2_SL_rh)
select_type_h_16S_rh <- rownames(sigtab3_SPL_rh)
select_type_s_16S_rh <- rownames(sigtab4_SPL_rh)
select_GTC_PM_rh <- rownames(sigtab5_PM_rh)
select_GTC_MP_rh <-rownames(sigtab6_MP_rh)

Common_ASV_16S_rh <- unique(c(select_SP_16S_rh,select_SL_16S_rh,select_type_h_16S_rh,select_type_s_16S_rh,select_GTC_PM_rh, select_GTC_MP_rh ))


##log transformation
nt_16S_rh<- normTransform(Rh_SL_deseq_16S_sig)
nt1_16S_rh<- normTransform(Rh_SP_deseq_16S_sig)# defaults to log2(x+1) ##transform from deseq
log2.norm.counts_SL_16S_rh<- assay(nt_16S_rh)[Common_ASV_16S_rh, ]
log2.norm.counts_SP_16S_rh <- assay(nt1_16S_rh)[Common_ASV_16S_rh, ]

##merge 
merged_Rh_16S<-merge(log2.norm.counts_SL_16S_rh,log2.norm.counts_SP_16S_rh, by=0)%>%
  column_to_rownames(var="Row.names")
write.csv(merged_Rh_16S,"D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/16S_DA_rh.csv", row.names=TRUE)
##check manually in excel

merged_Rh_16S2<-read.csv("D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/16S_DA_rh.csv",  header = TRUE)

#define the row names from the x column
row.names(merged_Rh_16S2) <- merged_Rh_16S2$X
head(merged_Rh_16S2)

#remove the column since it is now used as a row name
merged_Rh_16S2 <- merged_Rh_16S2[,-1]
head(merged_Rh_16S2)
view(merged_Rh_16S2)


##extract the variables/factors
df_SL_16S_rh<- as.data.frame(colData(Rh_SL_deseq_16S_sig)[,c("treatment", "genotype")])
df_SP_16S_rh <- as.data.frame(colData(Rh_SP_deseq_16S_sig)[,c("treatment", "genotype")])
df_comb_16S_rh<-rbind(df_SL_16S_rh,df_SP_16S_rh)


##extract the taxonomic table of the common asvs
Tax_table_16S_rh <- phyloseq::tax_table(physeq_significant)  ##extract taxonomic table
Tax_table_heatmap_16S_rh <- Tax_table_16S_rh[rownames(merged_Rh_16S2),]
df_row_16S_rh <- as.data.frame((Tax_table_heatmap_16S_rh)[,c("Kingdom","Phylum","Class","Order","Family", "Genus")])
head(df_row_16S_rh)
view(df_row_16S_rh)

##check for the taxonomy
write.csv(df_row_16S_rh, "D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/df_row_16S_rh.csv", row.names=TRUE)
##change manually the taxanomy name to have asv number in the end of taxa name
##read csv file
df_row_16S_rh1<-read.csv("D:/Botrytis stress/Botrytis stress microbiome/result/08-04-2024/df_row_16S_rh.csv")


Rownames_heatmap_16S_rh <- df_row_16S_rh1$Genus
breaksList = seq(0, 11, by = 0.1) # Determines axis and color scale
cell_width =12  # Width of cells
cell_height = 12 # Height of cells
display_numbers = F # Whether to show numbers in cells
color = rev(ocean.algae(120))
ASV_Heatmap_rp <- pheatmap(merged_Rh_16S2,
                           #filename = "Figures/ITS_heatmap_green_ASV.pdf",
                           annotation_col = df_comb_16S_rh,
                           annotation_names_col = T,
                           gaps_col =  cumsum(c(5,5,5,5)),
                           main = "differential rhizosphere bacterial community",
                           labels_row = Rownames_heatmap_16S_rh,
                           fontsize_row = 10, 
                           fontsize_col = 10,
                           fontsize = 9,
                           border_color = F,
                           angle_col = 45,
                           cluster_rows = T,
                           cluster_cols = F,
                           na_col = F,
                           cellwidth = cell_width,
                           cellheight = cell_height,
                           display_numbers = display_numbers,
                           color = color,
                           breaks = breaksList) # Sets the breaks of the color scale as in breaksList


